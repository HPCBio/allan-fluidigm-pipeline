#!/bin/sh
# program:     process_one_fluidigm.sh
# author:      Gloria Rendon
# date:        August, 2016
# description: a program that takes as input files of fluidigm-demultiplexed paired reads generated by pipeline version 2
#              and runs: trim, stitch, fastq_to_fasta to get them ready for vsearch
#########################################################################################

set -x

set +x;
echo -e "\n\n##############################################################################">&2;  
echo -e "\n\n############          START process_one_fluidigm.sh            ###############">&2;
echo -e "\n\n##############################################################################" >&2; 
set -x; 

demultiplexed=$1
R1=$2
R2=$3
outputfile=$4
ReportEmptyFiles=$5
outputdir=$6
runfile=$7


if [ $# != 7 ]
then
     echo -e "Program $0 stopped at line $LINENO\nREASON=Parameters mismatch. \n\n"
     echo -e "Rerun this program like this:\n$0 <amplicon-sample prefix><read1><read2><outputfile><reporemptyfiles><outputdir><configuration file>\n\n"
     exit 1;
fi

if [ ! -s $runfile ]
then
     echo "$runfile configuration file not found. Exiting now\n\n"
     exit 1;
fi


set +x;
echo -e "\n\n##############################################################################">&2;  
echo -e "\n\n############   PARSING CONFIGURATION FILE AND SANITY CHECK     ###############">&2;
echo -e "\n\n##############################################################################" >&2; 
set -x; 

email=$( cat $runfile | grep -w EMAIL | cut -d '=' -f2 )
rootdir=$( cat $runfile | grep -w PROJECTDIR | cut -d '=' -f2 )
inputdir=$( cat $runfile | grep -w  RAW_READS_DIR | cut -d '=' -f2 )
tmpdir=$( cat $runfile | grep -w TEMPDIR | cut -d '=' -f2 )
outdir=$( cat $runfile | grep -w PREPARED_READS_DIR | cut -d '=' -f2 )
scriptdir=$( cat $runfile | grep -w SCRIPTDIR | cut -d '=' -f2 )
nodes=$( cat $runfile | grep -w NODES | cut -d '=' -f2 )
threads=$( cat $runfile | grep -w THREADS | cut -d '=' -f2 )
queue=$( cat $runfile | grep -w QUEUE | cut -d '=' -f2 )
mem=$( cat $runfile | grep -w MEMORY | cut -d '=' -f2 )
trimMod=$( cat $runfile | grep -w TRIMMOMATICMOD | cut -d '=' -f2 )
fastqcMod=$( cat $runfile | grep -w FASTQCMOD | cut -d '=' -f2 )
pearMod=$( cat $runfile | grep -w PEARMOD | cut -d '=' -f2 )
fastxMod=$( cat $runfile | grep -w FASTXMOD | cut -d '=' -f2 )
adapters=$( cat $runfile | grep -w TRIMMOMATICADAPTERS | cut -d '=' -f2 )
cleanup=$( cat $runfile | grep -w REMOVE_TMPFILES | cut -d '=' -f2 | tr '[a-z]' '[A-Z]' )

set +x; echo -e "\n\n\n############ Prep work: create folders for FastQC results\n\n" >&2; set -x;

fqdir2=$outputdir/FastQC-trimmed
fqdir1=$outputdir/FastQC-raw               
mkdir -p $fqdir1
mkdir -p $fqdir2     

set +x; echo -e "\n\n\n############ Prep work: declare variables and output filename\n\n" >&2; set -x;

b1=${demultiplexed}_R1
b2=${demultiplexed}_R2
pairedR1=${b1}.paired.fq
pairedR2=${b2}.paired.fq
merged=${demultiplexed}_stitched
fq2fa=${demultiplexed}_SearchReady.fasta

set +x; echo -e "\n\n\n############ STEP1 fastqc on raw reads $R1 $R2\n\n" >&2; set -x;

cd $outputdir

echo `date`
module load $fastqcMod
fastqc -o $fqdir1 -t $threads $R1
fastqc -o $fqdir1 -t $threads $R2
module purge
echo `date`

set +x; echo -e "\n\n\n############ STEP2 trim raw reads $R1 $R2\n\n" >&2; set -x;

echo `date`
module load $trimMod          

java -classpath /home/apps/trimmomatic/trimmomatic-0.33/trimmomatic-0.33.jar \
org.usadellab.trimmomatic.TrimmomaticPE \
-threads $threads \
-phred33 \
-trimlog $outputdir/${demultiplexed}.trim.log \
$R1 $R2 \
$outputdir/${b1}.paired.fq $outputdir/${b1}.unpaired.fq \
$outputdir/${b2}.paired.fq $outputdir/${b2}.unpaired.fq \
HEADCROP:10 SLIDINGWINDOW:3:15
   
exitcode=$?
          
if [ $exitcode -ne 0 ]
then
   echo program stopped at line=$LINENO reason=trimmomatic failed on raw reads $R1 $R2
   exit $exitcode
fi
           
module purge
echo `date` 

set +x; echo -e "\n\n\n############ STEP3 fastqc on trimmed reads $pairedR1 $pairedR2\n\n" >&2; set -x;

echo `date` 
module load $fastqcMod
           

fastqc -o $fqdir2 -t $threads $pairedR1
fastqc -o $fqdir2 -t $threads $pairedR2
            
module purge
echo `date`

set +x; echo -e "\n\n\n############ STEP4 stitch trimmed reads $pairedR1 $pairedR2\n\n" >&2; set -x;

echo `date`
module load $pearMod

pear -f $pairedR1 -r $pairedR2 -o $merged

exitcode=$?
          
if [ $exitcode -ne 0 ]
then
   echo program stopped at line=$LINENO reason=stitch trimmed reads on $pairedR1 $pairedR2
   exit $exitcode
fi

module purge
echo `date`

set +x; echo -e "\n\n\n############ STEP5 convert fastq to fasta $merged \n\n" >&2; set -x;

echo `date`
module load $fastxMod

fastq_to_fasta -v -i ${merged}.assembled.fastq -o ${merged}.assembled.fasta
fastq_to_fasta -v -i ${merged}.unassembled.forward.fastq -o ${merged}.unassembled.forward.fasta          
cat ${merged}.assembled.fasta ${merged}.unassembled.forward.fasta > $outputfile

exitcode=$?
          
if [ $exitcode -ne 0 ]
then
	echo program stopped at line=$LINENO reason=convert fastq to fasta failed on  $merged
	exit $exitcode
fi

module purge
echo `date`

set +x; echo -e "\n\n\n############ STEP6 QC and cleanup $outputdir \n\n" >&2; set -x;

if [ ! -s $outputfile ]
then
	set +x; echo -e "\n\n\n############ WARNING $outputfile is empty \n\n" >&2; set -x;
	cat $outputfile >> $emptyOut
elif [ $cleanup == "YES" ]
then
	set +x; echo -e "\n\n\n############ everything is ok, cleanup temp files\n\n" >&2; set -x;
	rm ${demultiplexed}*paired.fq 
	rm ${demultiplexed}*stitched*
	rm ${demultiplexed}.trim.log  
fi

echo `date`
set +x; echo -e "\n\n\n############ Done. Outputfile=$outputfile  Outputdir=$outputdir \n\n\n" >&2; set -x;

set +x;
echo -e "\n\n##############################################################################">&2;  
echo -e "\n\n############          END process_one_fluidigm.sh            ###############">&2;
echo -e "\n\n##############################################################################" >&2; 
set -x; 
